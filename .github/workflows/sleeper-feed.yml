name: Sleeper Feed (auto)

on:
  schedule:
    - cron: "0 11 * * 2,3"   # Tue & Wed 7:00 AM ET (DST)
    - cron: "0 12 * * 2,3"   # Tue & Wed 7:00 AM ET (Standard)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: sleeper-feed
  cancel-in-progress: true

jobs:
  pull:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0


      - name: "Fetch league data via Sleeper public API"
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y && sudo apt-get install -y jq
          LID="1180875820112609280"

          mkdir -p data/sleeper

          curl -s https://api.sleeper.app/v1/state/nfl > data/sleeper/state.json
          curl -s https://api.sleeper.app/v1/league/$LID > data/sleeper/league.json
          curl -s https://api.sleeper.app/v1/league/$LID/users > data/sleeper/users.json
          curl -s https://api.sleeper.app/v1/league/$LID/rosters > data/sleeper/rosters.json

          W=$(jq -r '.week' data/sleeper/state.json)
          RECAP=$((W-1)); if [ "$RECAP" -lt 1 ]; then RECAP=1; fi
          NEXT=$((W+1))

          curl -s https://api.sleeper.app/v1/league/$LID/matchups/$RECAP > data/sleeper/matchups_recap.json
          curl -s https://api.sleeper.app/v1/league/$LID/matchups/$W      > data/sleeper/matchups_now.json || echo "[]" > data/sleeper/matchups_now.json
          curl -s https://api.sleeper.app/v1/league/$LID/matchups/$NEXT   > data/sleeper/matchups_next.json || echo "[]" > data/sleeper/matchups_next.json

          curl -s "https://api.sleeper.app/v1/league/$LID/transactions/$RECAP" > data/sleeper/transactions_recap.json
          curl -s "https://api.sleeper.app/v1/players/nfl/trending/add?lookback_hours=168&limit=200"  > data/sleeper/trending_add.json
          curl -s "https://api.sleeper.app/v1/players/nfl/trending/drop?lookback_hours=168&limit=200" > data/sleeper/trending_drop.json

          curl -s https://api.sleeper.app/v1/league/$LID/drafts > data/sleeper/drafts.json
          RDID=$(jq -r '[.[] | select(.type=="rookie")] | sort_by(.start_time) | (.[-1].draft_id // empty)' data/sleeper/drafts.json)

          if [ -n "$RDID" ] && [ "$RDID" != "null" ]; then
            curl -s https://api.sleeper.app/v1/draft/$RDID/picks > data/sleeper/rookie_picks.json
          else
            echo "[]" > data/sleeper/rookie_picks.json
          fi

          jq -n \
            --slurpfile state  data/sleeper/state.json \
            --slurpfile league data/sleeper/league.json \
            --slurpfile users  data/sleeper/users.json \
            --slurpfile rosters data/sleeper/rosters.json \
            --slurpfile recap  data/sleeper/matchups_recap.json \
            --slurpfile now    data/sleeper/matchups_now.json \
            --slurpfile next   data/sleeper/matchups_next.json \
            --slurpfile tx     data/sleeper/transactions_recap.json \
            --slurpfile add    data/sleeper/trending_add.json \
            --slurpfile drop   data/sleeper/trending_drop.json \
            --slurpfile drafts data/sleeper/drafts.json \
            --slurpfile rp     data/sleeper/rookie_picks.json \
            '{fetched_at: now,
              state: $state[0],
              league: $league[0],
              users: $users[0],
              rosters: $rosters[0],
              matchups: {recap: $recap, current: $now, next: $next},
              transactions: {recap: $tx[0]},
              trending: {add: $add[0], drop: $drop[0]},
              drafts: $drafts[0],
              rookie_picks: $rp[0]}' \
            > data/sleeper/latest.json

            - name: Commit updated feed
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # ensure we're up to date before committing
          git fetch origin main
          git checkout main
          git pull --rebase origin main

          # stage everything we just generated
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore(feed): update Sleeper pull"
            git push origin HEAD:main
          else
            echo "No changes."
          fi

          
